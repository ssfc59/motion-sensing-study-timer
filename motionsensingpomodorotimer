//timing
uint8_t pomodoroflag = 0;
unsigned long startTime;
unsigned long Start, finished, elapsed;

//Neopixels
#include <Adafruit_NeoPixel.h>
#define PIN 8
#define NUMPIXELS 5
Adafruit_NeoPixel pixels(NUMPIXELS, PIN);


//LCD
#include <LiquidCrystal.h>
LiquidCrystal lcd(7, 6, 2, 3, 4, 5);

//PIR
uint8_t inputPin = 9;               
uint8_t readPIR = 0; //to assume lack of motion when first started
uint8_t nomotionflag = 1; //value that indicates lack of motion, was 0

//encouraging message
const char string[][17] = {"you got this <3 ","great job!!     ","bravo!! :D      ","let's go!       ", "keep it up ^_^  ", "keep going!     ", "you can do it!  ", "nice work!      ", "amazing!!       ", "hang in there <3"};
//+1 to last value in println string random after adding each encouraging sentence


void setup() {
//timing
startTime = millis();
Serial.begin(9600);

//Neopixels
pixels.begin();
pixels.show();

//LCD
lcd.begin(16, 2);
Serial.print("connecting to LCD.");

//PIR
pinMode(inputPin, INPUT); 
    
//encouraging message
randomSeed(analogRead(0)); //obtains random number value from unconnected pin

}
void loop() {
  if (pomodoroflag == 1)
  {
    pixels.setPixelColor(0, 250, 250, 250); // set LED to white
    pixels.setPixelColor(1, 250, 250, 250); // set LED to white
    pixels.setPixelColor(2, 250, 250, 250); // set LED to white
    pixels.setPixelColor(3, 250, 250, 250); // set LED to white
    pixels.setPixelColor(4, 250, 250, 250); // set LED to white
    lcd.print("reset device");
    lcd.setCursor(0, 1);
    lcd.print("after long break");
    delay(50000);
  }
  else
    // number of pomodoro rounds
    for (int p = 1; p <= 4; ++p)
    {
      // stop after 4 pomodoro rounds
      if (p > 4)
      {
        pixels.clear();
        break;
      }
      else
        //work pomodoro
        // lights up 1 additional LED every 5 minutes for a maximum of 5 LEDs, 5*5 = 25 minute time interval
        for (int i = 0; i < NUMPIXELS; i++) 
        {
          pixels.setPixelColor(i, 200, 10, 0); 
          pixels.show();

          // updates LCD screen once per second for 5 minutes = 5*60 = 300 times
          for (int w = 1; w <= 300; ++w)
          {
            float m, s;
            unsigned long over;
            elapsed = millis() - startTime;
            over = elapsed % 3600000;
            m = int((over / 60000) - 30 * (p - 1));
            over = over % 60000;
            s = int(over / 1000);
            lcd.setCursor(0, 1);
            lcd.print(m, 0);
            lcd.print("m");
            lcd.print(s, 0);
            lcd.print("s/25 "); // out of 25 minutes
            lcd.print("Round");
            lcd.print(p); // number of rounds
            delay(1000);  // updates LCD screen every second
            PIR();  //runs function for PIR sensor
          }
        }
      pixels.clear();
      // work portion is over, now in break portion of Pomodoro
      // lights up 1 additional light every 1 minute for a maximum of 5 lights, 1*5 = 5 minute time interval
      for (int i = 0; i < NUMPIXELS; i++)
      {
        pixels.setPixelColor(i, 0, 150, 0);  // set LEDs to green
        pixels.show();

        // updates LCD screen once per second for 1 minute = 1*60 = 60 times
        for (int b = 1; b <= 60; ++b)
        {
          float m, s;
          unsigned long over;
          elapsed = millis() - startTime;
          over = elapsed % 3600000;
          m = int((over / 60000) - 25 * (p)-5 * (p - 1));
          over = over % 60000;
          s = int((over / 1000));
          lcd.setCursor(0, 0);
          lcd.print ("Break time :D");
          lcd.setCursor(0, 1);
          lcd.print(m, 0);
          lcd.print("m");
          lcd.print(s, 0);
          lcd.print("s/5  "); // out of 25 minutes
          lcd.print("Round");
          lcd.print(p); // number of rounds
          delay(1000);  // updates LCD screen every second
        }
      }
      Serial.println("pomodoro finished");
      pixels.clear();
      pomodoroflag = 1;
    }
}


  void PIR() {
    readPIR = digitalRead(inputPin); //check if motion detected

    if (readPIR == 1) {         //motion detected from PIR sensor 
      lcd.clear();
      nomotionflag = 0;         //value indicates motion
      lcd.println("working.........");
    }

    else {                        //no motion detected
      if (nomotionflag == 0) {
        lcd.clear();
        lcd.println(string[random(0, 10)]);
        //random string out of 7 is printed on LCD screen
        nomotionflag = 1;        //value indicates lack of motion
      }
    }
  }
